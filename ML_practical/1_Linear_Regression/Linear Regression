{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN94+q7O204YXkYw5tb9Shb"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**Simple Linear Regression**"],"metadata":{"id":"QB8kVo_tBE19"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"2xXKke09yrJq"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount(\"/content/gdrive\", force_remount= True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j7rhmBRNIPwO","executionInfo":{"status":"ok","timestamp":1687448013943,"user_tz":-330,"elapsed":36265,"user":{"displayName":"Manthan_ Mehar_DBDA","userId":"10430341665446730671"}},"outputId":"1e88ffc5-9d0c-4b08-b742-62f4685ca4e3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","source":["df = pd.read_csv(\"/content/gdrive/My Drive/ML_practical/1_Linear_Regression/homeprices.csv\")\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"laIiEtJDY3bW","executionInfo":{"status":"ok","timestamp":1687448014892,"user_tz":-330,"elapsed":954,"user":{"displayName":"Manthan_ Mehar_DBDA","userId":"10430341665446730671"}},"outputId":"b61ac9f1-caf3-45ab-dc74-c2ab9f0555b5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   area  price\n","0  1200   7000\n","1  1500  10000\n","2  1800  12000\n","3  2000  15000\n","4  2200  17000\n","5  2500  20000\n","6  1000   6000\n","7   800    500"],"text/html":["\n","  <div id=\"df-22a07ff9-eb4a-454d-beb8-6245d1b58e2b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>area</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1200</td>\n","      <td>7000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1500</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1800</td>\n","      <td>12000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2000</td>\n","      <td>15000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2200</td>\n","      <td>17000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2500</td>\n","      <td>20000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1000</td>\n","      <td>6000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>800</td>\n","      <td>500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-22a07ff9-eb4a-454d-beb8-6245d1b58e2b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-22a07ff9-eb4a-454d-beb8-6245d1b58e2b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-22a07ff9-eb4a-454d-beb8-6245d1b58e2b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["plt.xlabel('Area')\n","plt.ylabel('Price')\n","plt.scatter(df.area, df.price, color = 'red', marker ='+' )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"Jfmzob6dL4eB","executionInfo":{"status":"ok","timestamp":1687448015503,"user_tz":-330,"elapsed":621,"user":{"displayName":"Manthan_ Mehar_DBDA","userId":"10430341665446730671"}},"outputId":"166bf287-81a9-41d9-ad68-de81649ce91c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7fd13dabbc40>"]},"metadata":{},"execution_count":4},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["new_df = df.drop('price', axis = 'columns')\n","new_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"gDbXHU8LMWvi","executionInfo":{"status":"ok","timestamp":1687448015505,"user_tz":-330,"elapsed":17,"user":{"displayName":"Manthan_ Mehar_DBDA","userId":"10430341665446730671"}},"outputId":"7e200678-eff7-4b06-b7e1-5a02c45fe39f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   area\n","0  1200\n","1  1500\n","2  1800\n","3  2000\n","4  2200\n","5  2500\n","6  1000\n","7   800"],"text/html":["\n","  <div id=\"df-eb517f15-ffbd-44da-aaa6-d0cedc50f3c3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>area</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1200</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1500</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1800</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2200</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2500</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>800</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb517f15-ffbd-44da-aaa6-d0cedc50f3c3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-eb517f15-ffbd-44da-aaa6-d0cedc50f3c3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-eb517f15-ffbd-44da-aaa6-d0cedc50f3c3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["price = df.price\n","price"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IjyTSI7xOlbj","executionInfo":{"status":"ok","timestamp":1687448015506,"user_tz":-330,"elapsed":16,"user":{"displayName":"Manthan_ Mehar_DBDA","userId":"10430341665446730671"}},"outputId":"012580f0-ea1f-4049-e169-d0b85e8c8573"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0     7000\n","1    10000\n","2    12000\n","3    15000\n","4    17000\n","5    20000\n","6     6000\n","7      500\n","Name: price, dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["from sklearn import linear_model\n","reg = linear_model.LinearRegression()\n","\n","reg.fit(new_df, price)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"8k8ydpeROtGY","executionInfo":{"status":"ok","timestamp":1687448016762,"user_tz":-330,"elapsed":1268,"user":{"displayName":"Manthan_ Mehar_DBDA","userId":"10430341665446730671"}},"outputId":"1ee409a9-5dcf-4ff3-afe5-7b3e9742e9b1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["reg.predict([[1500]])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6s7gU2pIPT2y","executionInfo":{"status":"ok","timestamp":1687448016765,"user_tz":-330,"elapsed":22,"user":{"displayName":"Manthan_ Mehar_DBDA","userId":"10430341665446730671"}},"outputId":"de5a5743-6409-4d70-c701-b18a97f22869"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["array([9625.24654832])"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["reg.predict([[800]])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mudvwy_APrzj","executionInfo":{"status":"ok","timestamp":1687448016767,"user_tz":-330,"elapsed":18,"user":{"displayName":"Manthan_ Mehar_DBDA","userId":"10430341665446730671"}},"outputId":"3cc94cfc-de20-44dc-a263-3eff0b25cfae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["array([2276.62721893])"]},"metadata":{},"execution_count":9}]}]}